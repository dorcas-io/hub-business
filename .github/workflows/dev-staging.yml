name: Hub_DeployDevToStaging
on:
    push:
      branches: [ dev ]

jobs:
    deploy-lumen-to-ec2:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@master
      - name: Add public IP to AWS security group
        uses: sohelamin/aws-security-group-add-ip-action@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'eu-west-2'
<<<<<<< HEAD
          aws-security-group-id: ${{ secrets.AWS_SECRET_SECURITY_GROUP_ID_STAGING }}
=======
          aws-security-group-id: 'sg-01f199aed78e7a25bs'
>>>>>>> 601f846ba95a87b5e82b7037429142ebf7ec4772
          port: '22'
          protocol: 'tcp'
          description: 'GitHub Action Access (Staging)'
      - name: Clear Out HubBusiness Directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_STAGING_BUSINESS }}
          username: ${{ secrets.USERNAME_STAGING_BUSINESS }}
          key: ${{ secrets.KEY_STAGING_BUSINESS }}
          port: ${{ secrets.PORT_STAGING_BUSINESS }}
          script: |
            sudo rm -rf ${{ secrets.APPDIR_STAGING_BUSINESS_HUB }}/*
      - name: Copy LMSBackend Files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST_STAGING_BUSINESS }}
          username: ${{ secrets.USERNAME_STAGING_BUSINESS }}
          key: ${{ secrets.KEY_STAGING_BUSINESS }}
          port: ${{ secrets.PORT_STAGING_BUSINESS }}
          overwrite: true
          source: "./*"
          target: ${{ secrets.APPDIR_STAGING_BUSINESS_HUB }}
          tar_tmp_path: "/var/www/github-tmp"
      - name: Setup and Configure Laravel Installation
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_STAGING_BUSINESS }}
          username: ${{ secrets.USERNAME_STAGING_BUSINESS }}
          key: ${{ secrets.KEY_STAGING_BUSINESS }}
          port: ${{ secrets.PORT_STAGING_BUSINESS }}

          script: |
            cp /var/www/staging-files/.env-business-hub ${{ secrets.APPDIR_STAGING_BUSINESS_HUB }}/.env
            cd ${{ secrets.APPDIR_STAGING_BUSINESS_HUB }}
            composer install --optimize-autoloader --no-dev
            php artisan optimize
            sudo chown -R $USER:www-data ${{ secrets.APPDIR_STAGING_BUSINESS_HUB }}/storage
            sudo chown -R $USER:www-data ${{ secrets.APPDIR_STAGING_BUSINESS_HUB }}/bootstrap/cache
            sudo chmod -R 775 ${{ secrets.APPDIR_STAGING_BUSINESS_HUB }}/storage
            sudo chmod -R 775 ${{ secrets.APPDIR_STAGING_BUSINESS_HUB }}/bootstrap/cache
            sudo chmod -R u=rwx,g=rwx,o=rw ${{ secrets.APPDIR_STAGING_BUSINESS_HUB }}/storage/logs
            touch ${{ secrets.APPDIR_STAGING_BUSINESS_HUB }}/storage/logs/lumen.log && > ${{ secrets.APPDIR_STAGING_BUSINESS_HUB }}/storage/logs/lumen.log
            sudo chown $USER:www-data ${{ secrets.APPDIR_STAGING_BUSINESS_HUB }}/storage/logs/lumen.log
            sudo chmod u=rwx,g=rw,o=rw ${{ secrets.APPDIR_STAGING_BUSINESS_HUB }}/storage/logs/lumen.log
            sudo chmod u=rwx,g=rx,o=x ${{ secrets.APPDIR_STAGING_BUSINESS_HUB }}/artisan
            find "${{ secrets.APPDIR_STAGING_BUSINESS_HUB }}" -type f -name '*.php' -exec chmod 644 {} \;
            php artisan migrate --seed --force